services:
#  minio:
#    image: minio/minio
#    ports:
#      - '9000:9000'
#      - '9001:9001'
#    volumes:
#      - ~/minio/data:/data/minio
#    environment:
#      - MINIO_ROOT_USER=user
#      - MINIO_ROOT_PASSWORD=password
#    command: server --console-address :9001 /data

#  createbuckets:
#    image: minio/mc
#    depends_on:
#      - minio
#    entrypoint: >
#      /bin/sh -c "
#      sleep 10;
#      /usr/bin/mc config host add minio http://minio:9000 user password;
#      /usr/bin/mc mb minio/corpbucket;
#      /usr/bin/mc anonymous set public minio/corpbucket;
#      exit 0;
#      "

  mongodb:
    image: mongo
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongouser
      - MONGO_INITDB_ROOT_PASSWORD=mongopassword
    ports:
      - 27017:27017
    volumes:
      - data:/data

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=mongouser
      - ME_CONFIG_MONGODB_ADMINPASSWORD=mongopassword
      - ME_CONFIG_MONGODB_SERVER=mongodb

  elasticsearch:
    image: elasticsearch:8.18.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - default

volumes:
  data: {}

networks:
  default:
    name: mongodb_network