services:
  minio:
    image: minio/minio
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - ~/minio-data:/minio-data
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY}
    command: server --console-address :9001 /minio-data

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc alias set minio http://minio:9000 minioadmin minioadmin &&
      /usr/bin/mc mb minio/media &&
      /usr/bin/mc anonymous set public minio/media;
      exit 0;
      "

  mongodb:
    image: mongo:latest
    container_name: mongodb
    command: [ "/bin/sh", "-c", "openssl rand -base64 756 > /data/db/mongo-keyfile && chmod 400 /data/db/mongo-keyfile && exec mongod --auth --replSet rs0 --bind_ip_all --keyFile /data/db/mongo-keyfile" ]
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongouser
      - MONGO_INITDB_ROOT_PASSWORD=mongopassword
    ports:
      - "27017:27017"
    volumes:
      - db-data:/data/db
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'mongodb:27017'}]}) }" ]
      interval: 5s
      timeout: 30s
      retries: 10

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=mongouser
      - ME_CONFIG_MONGODB_ADMINPASSWORD=mongopassword
      - ME_CONFIG_MONGODB_SERVER=mongodb

  elasticsearch:
    image: elasticsearch:9.0.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - default

volumes:
  db-data:
    driver: local
  minio-data:
    driver: local

networks:
  default:
    name: mongodb_network